[{"C:\\Users\\mshas\\dev\\react-formik\\src\\index.js":"1","C:\\Users\\mshas\\dev\\react-formik\\src\\reportWebVitals.js":"2","C:\\Users\\mshas\\dev\\react-formik\\src\\App.js":"3","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikContainer.js":"4","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikControl.js":"5","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Input.js":"6","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextError.js":"7","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextArea.js":"8","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Select.js":"9","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\RadioButtons.js":"10","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\CheckboxGroup.js":"11","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\DatePicker.js":"12","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\YoutubeForm.js":"13","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Profile.js":"14","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LoginButton.js":"15","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LogoutButton.js":"16","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\AppRouter.js":"17","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\auth0-provider-with-history.js":"18"},{"size":969,"mtime":1619817479570,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1619033094390,"results":"21","hashOfConfig":"20"},{"size":2337,"mtime":1619816066200,"results":"22","hashOfConfig":"20"},{"size":3938,"mtime":1619033094386,"results":"23","hashOfConfig":"20"},{"size":848,"mtime":1619033094386,"results":"24","hashOfConfig":"20"},{"size":923,"mtime":1619033094386,"results":"25","hashOfConfig":"20"},{"size":186,"mtime":1619033094388,"results":"26","hashOfConfig":"20"},{"size":471,"mtime":1619033094388,"results":"27","hashOfConfig":"20"},{"size":1445,"mtime":1619033094388,"results":"28","hashOfConfig":"20"},{"size":1558,"mtime":1619033094388,"results":"29","hashOfConfig":"20"},{"size":1524,"mtime":1619033094385,"results":"30","hashOfConfig":"20"},{"size":1046,"mtime":1619033094386,"results":"31","hashOfConfig":"20"},{"size":7691,"mtime":1619033094389,"results":"32","hashOfConfig":"20"},{"size":1847,"mtime":1619815693351,"results":"33","hashOfConfig":"20"},{"size":263,"mtime":1619033094387,"results":"34","hashOfConfig":"20"},{"size":324,"mtime":1619033094387,"results":"35","hashOfConfig":"20"},{"size":440,"mtime":1619033094385,"results":"36","hashOfConfig":"20"},{"size":694,"mtime":1619817467892,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a0qifq",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mshas\\dev\\react-formik\\src\\index.js",["78","79","80"],"C:\\Users\\mshas\\dev\\react-formik\\src\\reportWebVitals.js",[],["81","82"],"C:\\Users\\mshas\\dev\\react-formik\\src\\App.js",["83","84","85","86","87","88","89"],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikContainer.js",["90"],"import React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from './FormikControl'\r\nimport { Effect } from 'formik-effect'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FormikContainer = () => \r\n{\r\n    const dropdownOptions = [\r\n        { key: 'Select an Option', value:'' },\r\n        { key: 'Option 1', value: 'option1' },\r\n        { key: 'Option 2', value: 'option2' },\r\n        { key: 'Option 3', value: 'option3' },\r\n    ]\r\n\r\n    const radioOptions = [\r\n        { key: 'Option 1', value: 'rOption1' },\r\n        { key: 'Option 2', value: 'rOption2' },\r\n        { key: 'Option 3', value: 'rOption3' },\r\n    ]\r\n\r\n    const checkboxOptions = [\r\n        { key: 'Option 1', value: 'cOption1' },\r\n        { key: 'Option 2', value: 'cOption2' },\r\n        { key: 'Option 3', value: 'cOption3' },\r\n    ]\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        description: '',\r\n        selectOption: '',\r\n        radioOption: '',\r\n        checkboxOption: [],\r\n        date: null,\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().required('Required'),\r\n        description: Yup.string().required('Required'),\r\n        selectOption: Yup.string().required('Required'),\r\n        radioOption: Yup.string().required('Required'),\r\n        checkboxOption: Yup.array().min(1, 'Required'),\r\n        date: Yup.date().required('Required').nullable(),\r\n    })\r\n\r\n    const onSubmit = values => console.log('Form Data', values)\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {\r\n                    formik => (\r\n                        <Form>\r\n                            <Effect \r\n                                onValidationChange={(a, b) =>\r\n                                {\r\n                                    console.log(a, b);\r\n                                }}\r\n                            />\r\n                            <FormikControl \r\n                                control='input'\r\n                                type='email'\r\n                                label='Email'\r\n                                name='email'\r\n                                value={initialValues.email}\r\n                            />\r\n                            <FormikControl \r\n                                control='textarea'\r\n                                label='Description'\r\n                                name='description'\r\n                            />\r\n                            <FormikControl \r\n                                control='select'\r\n                                label='Select an Option'\r\n                                name='selectOption'\r\n                                options={dropdownOptions}\r\n                            />\r\n                            <FormikControl \r\n                                control='radio'\r\n                                label='Select an Option'\r\n                                name='radioOption'\r\n                                options={radioOptions}\r\n                            />\r\n                            <FormikControl \r\n                                control='checkbox'\r\n                                label='Pick Options'\r\n                                name='checkboxOption'\r\n                                options={checkboxOptions}\r\n                            />\r\n                            <FormikControl \r\n                                control='date'\r\n                                label='Pick a Date'\r\n                                name='date'\r\n                            />\r\n                            <button type='submit'>Submit</button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormikContainer","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikControl.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Input.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextError.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextArea.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Select.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\RadioButtons.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\CheckboxGroup.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\DatePicker.js",["91","92"],"import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport DateView from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport TextError from './TextError'\r\n\r\n\r\nconst DatePicker = (props) =>\r\n{\r\n    const { name, label, ...rest } = props\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({ form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        \r\n                        return <DateView \r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)}\r\n                        />\r\n                    }\r\n                }\r\n            </Field>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePicker","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\YoutubeForm.js",["93","94","95","96","97"],"import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport TextError from \"./TextError\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  channel: '',\r\n  comments: '',\r\n  socials: {\r\n    facebook: '',\r\n    twitter: '',\r\n  },\r\n  phoneNumbers: ['', ''],\r\n  phNumbers: [''],\r\n}\r\n\r\nconst onSubmit = (values, onSubmitProps) => {\r\n  console.log('Form data', values)\r\n  console.log('On Submit Props', onSubmitProps)\r\n  onSubmitProps.setSubmitting(false)\r\n  onSubmitProps.resetForm()\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email format')\r\n    .required('Required'),\r\n  channel: Yup.string().required('Required')\r\n})\r\n\r\nconst validateComments = value => {\r\n  let error\r\n  console.log(error)\r\n  if (!value) {\r\n    error = 'Required'\r\n  }\r\n  return error\r\n}\r\n\r\n\r\nconst YoutubeForm = () => \r\n{\r\n  console.log({Field})\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n        // validateOnMount\r\n        // validateOnChange={false}\r\n        // validateOnBlur={false}\r\n      >\r\n        {\r\n          formik => {\r\n            console.log('Formik Props', formik)\r\n            return (\r\n              <Form>\r\n              <div className='form-control'>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  />\r\n                <ErrorMessage name='name' component={TextError} />\r\n              </div>\r\n      \r\n              <div className='form-control'>    \r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  />\r\n                <ErrorMessage name='email'>\r\n                  {\r\n                    (errorMsg) => \r\n                      <p className='error' >{errorMsg}</p>\r\n                  }\r\n                </ErrorMessage>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"channel\">Channel</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"channel\"\r\n                  name=\"channel\"\r\n                />\r\n                <ErrorMessage name='channel'>\r\n                  {\r\n                    (errorMsg) =>\r\n                      <p className=\"error\">{errorMsg}</p>\r\n                  }\r\n                </ErrorMessage>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"comments\">Comments</label>\r\n                <Field \r\n                  as=\"textarea\"\r\n                  id=\"comments\"\r\n                  name=\"comments\"\r\n                  validate={validateComments}\r\n                />\r\n                <ErrorMessage name=\"comments\" component={TextError} />\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"address\">Address</label>\r\n                <FastField name=\"address\">\r\n                  {\r\n                    (props) => {\r\n                      const { field, form, meta } = props\r\n                      // console.log('Render props', props)\r\n                      // console.log('Fast Field')\r\n                      return (\r\n                        <div>\r\n                          <input type='text' id=\"address\" {...field} />\r\n                          {\r\n                            meta.touched && \r\n                            meta.error &&\r\n                            <p>{meta.error}</p>\r\n                          }\r\n                        </div>\r\n                      )\r\n                    }\r\n                  }\r\n                </FastField>\r\n              </div>\r\n      \r\n              <div className=\"form-control\" >\r\n                <label htmlFor=\"facebook\">Facebook Profile</label>\r\n                <Field \r\n                  type=\"text\"\r\n                  id=\"facebook\"\r\n                  name=\"socials.facebook\"      \r\n                />\r\n              </div>\r\n      \r\n              <div className=\"form-control\" >\r\n                  <label htmlFor=\"twitter\" >Twitter Profile</label>\r\n                  <Field name=\"socials.twitter\">\r\n                    {\r\n                      (props) => {\r\n                        const { field, form, meta } = props;\r\n      \r\n                        return(\r\n                          <div>\r\n                            <input type=\"text\" id=\"twitter\" {...field} />\r\n                            {\r\n                              meta.touched && meta.error &&\r\n                            <p>{meta.error}</p>\r\n                            }\r\n                          </div>\r\n                        )\r\n                      }\r\n                    }\r\n                  </Field>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"primaryPh\">Primary phone number</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"primaryPh\"\r\n                  name=\"phoneNumbers[0]\"\r\n                />\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"secondaryPh\">Secondary phone number</label>\r\n                <Field name=\"phoneNumbers[1]\">\r\n                    {\r\n                      (props) => {\r\n                        const { field, form, meta } = props;\r\n      \r\n                        return(\r\n                          <input type=\"text\" id=\"secondaryPh\" {...field} />\r\n                        )\r\n                      }\r\n                    }\r\n                </Field>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"phNumbers\">List of phone numbers</label>\r\n                <FieldArray name=\"phNumbers\">\r\n                    {\r\n                      (fieldArrayProps) => {\r\n                        // console.log(fieldArrayProps)\r\n                        const { push, remove, form } = fieldArrayProps;\r\n                        const { values } = form;\r\n                        const { phNumbers } = values\r\n                        // console.log('Form Validation', form.errors)\r\n                        return (\r\n                          <div>\r\n                            {\r\n                              phNumbers.map((phNumber, index) => (\r\n                                <div key={index}>\r\n                                  <Field type=\"text\" name={`phNumbers[${index}]`} />\r\n                                  {\r\n                                    (index > 0) && \r\n                                    <button type=\"button\" onClick={() => remove(index)}> - </button>\r\n                                  }\r\n                                  <button type=\"button\" onClick={() => push('')}> + </button>\r\n                                </div>\r\n                              ))\r\n                            }\r\n                          </div>\r\n                        )\r\n                      }\r\n                    }\r\n                </FieldArray>   \r\n              </div>\r\n      \r\n              <button \r\n                type=\"submit\"\r\n                disabled={!formik.isValid || formik.isSubmitting}\r\n              >\r\n                Submit\r\n              </button>\r\n            </Form>\r\n            )\r\n          }\r\n        }\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YoutubeForm;","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Profile.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LoginButton.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LogoutButton.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\AppRouter.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\auth0-provider-with-history.js",[],{"ruleId":"98","severity":1,"message":"99","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":20},{"ruleId":"98","severity":1,"message":"102","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":23},{"ruleId":"98","severity":1,"message":"103","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":17},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"98","severity":1,"message":"108","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":12},{"ruleId":"98","severity":1,"message":"109","line":5,"column":48,"nodeType":"100","messageId":"101","endLine":5,"endColumn":57},{"ruleId":"98","severity":1,"message":"110","line":12,"column":3,"nodeType":"100","messageId":"101","endLine":12,"endColumn":7},{"ruleId":"98","severity":1,"message":"111","line":13,"column":3,"nodeType":"100","messageId":"101","endLine":13,"endColumn":14},{"ruleId":"98","severity":1,"message":"112","line":23,"column":8,"nodeType":"100","messageId":"101","endLine":23,"endColumn":20},{"ruleId":"98","severity":1,"message":"113","line":24,"column":8,"nodeType":"100","messageId":"101","endLine":24,"endColumn":19},{"ruleId":"98","severity":1,"message":"114","line":31,"column":34,"nodeType":"100","messageId":"101","endLine":31,"endColumn":43},{"ruleId":"98","severity":1,"message":"110","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":14},{"ruleId":"98","severity":1,"message":"115","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":29},{"ruleId":"98","severity":1,"message":"116","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":17},{"ruleId":"98","severity":1,"message":"110","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"117","line":122,"column":38,"nodeType":"100","messageId":"101","endLine":122,"endColumn":42},{"ruleId":"98","severity":1,"message":"117","line":154,"column":40,"nodeType":"100","messageId":"101","endLine":154,"endColumn":44},{"ruleId":"98","severity":1,"message":"117","line":184,"column":40,"nodeType":"100","messageId":"101","endLine":184,"endColumn":44},{"ruleId":"98","severity":1,"message":"118","line":184,"column":46,"nodeType":"100","messageId":"101","endLine":184,"endColumn":50},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Auth0Provider' is defined but never used.","'AppRouter' is defined but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'logo' is defined but never used.","'Component' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'LogoutButton' is defined but never used.","'LoginButton' is defined but never used.","'isLoading' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'TextError' is defined but never used.","'form' is assigned a value but never used.","'meta' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]