[{"C:\\Users\\mshas\\dev\\react-formik\\src\\index.js":"1","C:\\Users\\mshas\\dev\\react-formik\\src\\reportWebVitals.js":"2","C:\\Users\\mshas\\dev\\react-formik\\src\\App.js":"3","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikContainer.js":"4","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikControl.js":"5","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Input.js":"6","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextError.js":"7","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextArea.js":"8","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Select.js":"9","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\RadioButtons.js":"10","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\CheckboxGroup.js":"11","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\DatePicker.js":"12","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\YoutubeForm.js":"13","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Profile.js":"14","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LoginButton.js":"15","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LogoutButton.js":"16"},{"size":749,"mtime":1617131369838,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1752,"mtime":1617131568641,"results":"20","hashOfConfig":"18"},{"size":3988,"mtime":1617123686024,"results":"21","hashOfConfig":"18"},{"size":848,"mtime":1608682289691,"results":"22","hashOfConfig":"18"},{"size":923,"mtime":1614907291871,"results":"23","hashOfConfig":"18"},{"size":186,"mtime":1608651745867,"results":"24","hashOfConfig":"18"},{"size":471,"mtime":1608678602811,"results":"25","hashOfConfig":"18"},{"size":1445,"mtime":1614906753846,"results":"26","hashOfConfig":"18"},{"size":1558,"mtime":1608678903472,"results":"27","hashOfConfig":"18"},{"size":1524,"mtime":1611941991716,"results":"28","hashOfConfig":"18"},{"size":1046,"mtime":1608682075265,"results":"29","hashOfConfig":"18"},{"size":7734,"mtime":1617115176687,"results":"30","hashOfConfig":"18"},{"size":1248,"mtime":1617131687020,"results":"31","hashOfConfig":"18"},{"size":263,"mtime":1617118683108,"results":"32","hashOfConfig":"18"},{"size":306,"mtime":1617118747422,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"j13850",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\mshas\\dev\\react-formik\\src\\index.js",["71"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Auth0Provider\n      domain=\"dev-vaa1s4lm.us.auth0.com\"\n      clientId=\"QBB6awxGUWtHx8a5YZsAJd8AXwS7y0GM\"\n      redirectUri={window.location.origin}\n    > */}\n      <App />\n    {/* </Auth0Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["72","73"],"C:\\Users\\mshas\\dev\\react-formik\\src\\reportWebVitals.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\App.js",["74","75","76","77","78","79","80","81"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n\r\n\r\nimport FormikContainer from './components/FormikContainer';\r\nimport YoutubeForm from './components/YoutubeForm';\r\nimport Profile from './components/Profile';\r\nimport LogoutButton from './components/LogoutButton';\r\nimport LoginButton from './components/LoginButton';\r\n\r\n\r\nfunction App()\r\n{\r\n  const [ isDemo, setIsDemo ] = useState(false);\r\n  \r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n  \r\n  function isAuth()\r\n  {\r\n    if(user?.email === 'sazied@polyunity.com') setIsDemo(true)\r\n  }\r\n  \r\n  \r\n  useEffect(() =>{\r\n    isAuth();\r\n  })\r\n  \r\n  \r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/new-form'\r\n              render={() => \r\n                // isDemo ? (\r\n                  <FormikContainer />\r\n                  // ) : (\r\n                  //   <Redirect to='/' />\r\n                  //   )\r\n                  }\r\n            />\r\n            <Route\r\n              exact\r\n              path='/old-form'\r\n              render={() => \r\n                // isDemo ? (\r\n                  <YoutubeForm />\r\n                // ) : (\r\n                //   <Redirect to='/' />\r\n                //   )\r\n                }\r\n            />\r\n            <Route \r\n              path='/'\r\n              render={() => <Profile />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikContainer.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\FormikControl.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Input.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextError.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\TextArea.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Select.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\RadioButtons.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\CheckboxGroup.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\DatePicker.js",["82","83"],"import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport DateView from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport TextError from './TextError'\r\n\r\n\r\nconst DatePicker = (props) =>\r\n{\r\n    const { name, label, ...rest } = props\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({ form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        \r\n                        return <DateView \r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)}\r\n                        />\r\n                    }\r\n                }\r\n            </Field>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePicker","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\YoutubeForm.js",["84","85","86","87"],"import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport TextError from \"./TextError\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  channel: '',\r\n  comments: '',\r\n  socials: {\r\n    facebook: '',\r\n    twitter: '',\r\n  },\r\n  phoneNumbers: ['', ''],\r\n  phNumbers: [''],\r\n}\r\n\r\nconst onSubmit = (values, onSubmitProps) => {\r\n  console.log('Form data', values)\r\n  console.log('On Submit Props', onSubmitProps)\r\n  onSubmitProps.setSubmitting(false)\r\n  onSubmitProps.resetForm()\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email format')\r\n    .required('Required'),\r\n  channel: Yup.string().required('Required')\r\n})\r\n\r\nconst validateComments = value => {\r\n  let error\r\n  console.log(error)\r\n  if (!value) {\r\n    error = 'Required'\r\n  }\r\n  return error\r\n}\r\n\r\n\r\nconst YoutubeForm = () => \r\n{\r\n  console.log({Field})\r\n\r\n  return (\r\n    <>\r\n      <Link to='new-form'>New Form</Link>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n        // validateOnMount\r\n        // validateOnChange={false}\r\n        // validateOnBlur={false}\r\n      >\r\n        {\r\n          formik => {\r\n            console.log('Formik Props', formik)\r\n            return (\r\n              <Form>\r\n              <div className='form-control'>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  />\r\n                <ErrorMessage name='name' component={TextError} />\r\n              </div>\r\n      \r\n              <div className='form-control'>    \r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  />\r\n                <ErrorMessage name='email'>\r\n                  {\r\n                    (errorMsg) => \r\n                      <p className='error' >{errorMsg}</p>\r\n                  }\r\n                </ErrorMessage>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"channel\">Channel</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"channel\"\r\n                  name=\"channel\"\r\n                />\r\n                <ErrorMessage name='channel'>\r\n                  {\r\n                    (errorMsg) =>\r\n                      <p className=\"error\">{errorMsg}</p>\r\n                  }\r\n                </ErrorMessage>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"comments\">Comments</label>\r\n                <Field \r\n                  as=\"textarea\"\r\n                  id=\"comments\"\r\n                  name=\"comments\"\r\n                  validate={validateComments}\r\n                />\r\n                <ErrorMessage name=\"comments\" component={TextError} />\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"address\">Address</label>\r\n                <FastField name=\"address\">\r\n                  {\r\n                    (props) => {\r\n                      const { field, form, meta } = props\r\n                      // console.log('Render props', props)\r\n                      // console.log('Fast Field')\r\n                      return (\r\n                        <div>\r\n                          <input type='text' id=\"address\" {...field} />\r\n                          {\r\n                            meta.touched && \r\n                            meta.error &&\r\n                            <p>{meta.error}</p>\r\n                          }\r\n                        </div>\r\n                      )\r\n                    }\r\n                  }\r\n                </FastField>\r\n              </div>\r\n      \r\n              <div className=\"form-control\" >\r\n                <label htmlFor=\"facebook\">Facebook Profile</label>\r\n                <Field \r\n                  type=\"text\"\r\n                  id=\"facebook\"\r\n                  name=\"socials.facebook\"      \r\n                />\r\n              </div>\r\n      \r\n              <div className=\"form-control\" >\r\n                  <label htmlFor=\"twitter\" >Twitter Profile</label>\r\n                  <Field name=\"socials.twitter\">\r\n                    {\r\n                      (props) => {\r\n                        const { field, form, meta } = props;\r\n      \r\n                        return(\r\n                          <div>\r\n                            <input type=\"text\" id=\"twitter\" {...field} />\r\n                            {\r\n                              meta.touched && meta.error &&\r\n                            <p>{meta.error}</p>\r\n                            }\r\n                          </div>\r\n                        )\r\n                      }\r\n                    }\r\n                  </Field>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"primaryPh\">Primary phone number</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"primaryPh\"\r\n                  name=\"phoneNumbers[0]\"\r\n                />\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"secondaryPh\">Secondary phone number</label>\r\n                <Field name=\"phoneNumbers[1]\">\r\n                    {\r\n                      (props) => {\r\n                        const { field, form, meta } = props;\r\n      \r\n                        return(\r\n                          <input type=\"text\" id=\"secondaryPh\" {...field} />\r\n                        )\r\n                      }\r\n                    }\r\n                </Field>\r\n              </div>\r\n      \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"phNumbers\">List of phone numbers</label>\r\n                <FieldArray name=\"phNumbers\">\r\n                    {\r\n                      (fieldArrayProps) => {\r\n                        // console.log(fieldArrayProps)\r\n                        const { push, remove, form } = fieldArrayProps;\r\n                        const { values } = form;\r\n                        const { phNumbers } = values\r\n                        // console.log('Form Validation', form.errors)\r\n                        return (\r\n                          <div>\r\n                            {\r\n                              phNumbers.map((phNumber, index) => (\r\n                                <div key={index}>\r\n                                  <Field type=\"text\" name={`phNumbers[${index}]`} />\r\n                                  {\r\n                                    (index > 0) && \r\n                                    <button type=\"button\" onClick={() => remove(index)}> - </button>\r\n                                  }\r\n                                  <button type=\"button\" onClick={() => push('')}> + </button>\r\n                                </div>\r\n                              ))\r\n                            }\r\n                          </div>\r\n                        )\r\n                      }\r\n                    }\r\n                </FieldArray>   \r\n              </div>\r\n      \r\n              <button \r\n                type=\"submit\"\r\n                disabled={!formik.isValid || formik.isSubmitting}\r\n              >\r\n                Submit\r\n              </button>\r\n            </Form>\r\n            )\r\n          }\r\n        }\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YoutubeForm;","C:\\Users\\mshas\\dev\\react-formik\\src\\components\\Profile.js",["88","89","90","91","92"],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LoginButton.js",[],"C:\\Users\\mshas\\dev\\react-formik\\src\\components\\LogoutButton.js",[],{"ruleId":"93","severity":1,"message":"94","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":23},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"102","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":11},{"ruleId":"93","severity":1,"message":"103","line":12,"column":3,"nodeType":"95","messageId":"96","endLine":12,"endColumn":7},{"ruleId":"93","severity":1,"message":"104","line":22,"column":8,"nodeType":"95","messageId":"96","endLine":22,"endColumn":20},{"ruleId":"93","severity":1,"message":"105","line":23,"column":8,"nodeType":"95","messageId":"96","endLine":23,"endColumn":19},{"ruleId":"93","severity":1,"message":"106","line":28,"column":11,"nodeType":"95","messageId":"96","endLine":28,"endColumn":17},{"ruleId":"93","severity":1,"message":"107","line":30,"column":17,"nodeType":"95","messageId":"96","endLine":30,"endColumn":32},{"ruleId":"93","severity":1,"message":"108","line":30,"column":34,"nodeType":"95","messageId":"96","endLine":30,"endColumn":43},{"ruleId":"93","severity":1,"message":"109","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"110","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":17},{"ruleId":"93","severity":1,"message":"111","line":123,"column":38,"nodeType":"95","messageId":"96","endLine":123,"endColumn":42},{"ruleId":"93","severity":1,"message":"111","line":155,"column":40,"nodeType":"95","messageId":"96","endLine":155,"endColumn":44},{"ruleId":"93","severity":1,"message":"111","line":185,"column":40,"nodeType":"95","messageId":"96","endLine":185,"endColumn":44},{"ruleId":"93","severity":1,"message":"112","line":185,"column":46,"nodeType":"95","messageId":"96","endLine":185,"endColumn":50},{"ruleId":"93","severity":1,"message":"113","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"114","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"115","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"93","severity":1,"message":"105","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":19},{"ruleId":"93","severity":1,"message":"104","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},"no-unused-vars","'Auth0Provider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'logo' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'LogoutButton' is defined but never used.","'LoginButton' is defined but never used.","'isDemo' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'TextError' is defined but never used.","'form' is assigned a value but never used.","'meta' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useAuth0' is defined but never used.","no-global-assign","no-unsafe-negation"]